[default]
[named]
EXTRACT-named_dest_ip = IN\s\w+\s(?<dest_ip>\d+\.\d+\.\d+\.\d+)
EXTRACT-named_dns_zone = \]\:\szone\s(?<DNS_zone>[^\/]+)
EXTRACT-named_src_port = \#(?<src_port>\d+)
EXTRACT-named_soa_update = IN\sSOA\s(?<primary_ns>[^\s]+)(?<!\.)\.\s(?<mail_address>[^\s]+)(?<!\.)\.\s(?<serial>\d+)\s(?<refresh_time>\d+)\s(?<retry_time>\d+)\s(?<expire_time>\d+)\s(?<default_ttl>\d+)
EXTRACT-named_response_fields = client\s+(?<src_ip>[^\#]+)\#(?<src_port>[^\:]+)\:\s+(?<transport>[^\:]+)\:\s+query\:\s+(?<query>[^\s]+)\s+(?<record_class>[^\s]+)\s+(?<record_type>[^\s]+)\s+response\:\s+(?<response_code>[^\s]+)\s+(?<response_flags>[^\s]+)\s+(?<response_query>[^\s]+)\s+(?<default_ttl>[^\s]+)\s+(?<response_class>[^\s]+)\s+(?<response_record_type>[^\s]+)(?:\s+\"|\s+)(?<response_record_value>.*)(?!\;\s|\;$)
EVAL-message_type = if(eventtype="named_query", "Query", "unknown")
EXTRACT-named_dns_options = IN\s.*?\s(?<response_flags>\+[AEDV]{0,4}|\-[AEDV]{0,4})(?:$|\s+(?<rr>.*)\;)
FIELDALIAS-named_dest = dns_server_ip AS dest dst AS dest spt AS src_port
EXTRACT-zone = zone\s+\'(?<zone>[^\/\s\']+)
EVAL-rr = case(match(rr,"(?i)\"v=dmarc1|v=dkim1|k=rsa;"),split(replace(replace(replace(replace(rr,"((?i)rrsig[^;]+)(;)","\1|"),"\.;",".|"),"\";","\"|"),"\"\s+\"",""),"|"), true(),split(rr,"; "))
EXTRACT-rpz_fields = Infoblox\|NIOS\|(?<nios_version>[^\|]+)\|(?<hittype>[^\|]+)\|(?<response_error>[^\|]+)\|(?<severity_level>[^\|]+)
EXTRACT-named_query2 = client.*?\((?<query>[^\)]+).*?RFC\s1918
EXTRACT-named_dest_name2 = for\s\'(?!\d+\.\d+.\d+)(?<dest_name>[^\']+)
EXTRACT-named_named_domain = query:\s.*?\.(?<named_domain>[a-z0-9_-]+\.(?:co\.uk|co\.jp|com\.au|\w+))(?=\s)
EXTRACT-named_dest_name = ZRQ(?:.*?)IN\s(?!SOA)\w+\s(?!\d+\.\d+\.\d+\.\d+|\W+)(?<dst_name>[^\s]+)(?<!\.)
EVAL-response_record_value = trim(mvindex(split(response_record_value,";"),0),"\" ")
EXTRACT-named_intercept = named\[(?<proces_id>[^\]]+)\]\:\sIntercept\s\((?<intercept_reason>[^\)]+)\)\:\s*\'(?<query>.*?)\.\'\s(?:[^\(]+)\(([^\)]+)\)\:\s\'(?<reason>[^\']+)(?:[^\(]+)\((?<src_ip>[^\)]+)\)
EXTRACT-named_soa_serial = SOA\sserial\s(?<soa_serial>\d+)
EXTRACT-response_error = response\:\s*(?<response_error>NOERROR|NXDOMAIN|REFUSED|SERVFAIL|NOTAUTH)
EXTRACT-dns_update_record = adding[^\']+\'(?<added_record>[^\']+)\'\s+(?<added_record_type>\w+)
EXTRACT-named_zone_version = now\s(?<zone_version>\d+)
EVAL-transport = if(match(dns_options,".*t.*") OR match(dns_options,".*T.*"),"TCP", "UDP")
EVAL-query_type = case(eventtype=="named_query" AND named_domain=="in-addr.arpa","IQuery", eventtype=="named_query" AND named_domain!="in-addr.arpa","Query", eventtype=="named_transactions" AND isnotnull(zone_version),"Notify", eventtype=="named_transactions" AND isnull(zone_version),"Update", isnotnull(qtype),qtype, true(),"unknown")
EXTRACT-named_transaction_nr = transaction\s(?<transaction_nr>\d+)
EXTRACT-named_response_fields_rrsig = client\s+(?<src_ip>[^\#]+)\#(?<src_port>[^\:]+)\:\s+(?<transport>[^\:]+)\:\s+query\:\s+(?<query>[^\s]+)\s+(?<record_class>[^\s]+)\s+(?<record_type>A|CAA|MX|NS|NSEC3PARAM|SOA|TXT)\s+response\:\s+(?<response_code>[^\s]+)\s+(?<response_flags>[^\s]+)\s+(?<response_query>[^\s]+)\s+(?<default_ttl>[^\s]+)\s+(?<response_class>[^\s]+)\s+(?<response_record_type>[^\s]+)\s(?<response_record_value>.*)(?:\"\;|\;)(?:.*?)\s(?:.*?)IN\sRRSIG\s(?<type_covered>[^\s]+)\s+(?<algorithm>[^\s]+)\s+(?<labels>[^\s]+)\s+(?<original_ttl>[^\s]+)\s+(?<signature_expiration>\d{14})\s+(?<signature_inception>\d{14})\s+(?<key_tag>[^\s]+)\s+(?<signers_name>.*?)\.\s+(?<signature_base64>[^\;]+)
EXTRACT-named_src_ip = client\s+(?<src_ip>[^\#]+)
EXTRACT-named_action = applied\s(?<action>\w+)\s
EXTRACT-named_dns_server_ip = \((?<dns_server_ip>[^\)]+)\)(?:\s*|\.\s*)$
REPORT-named_action = named_action_query,named_action_intercept,named_action_soa_client_transaction,named_action_error,named_action_response
EXTRACT-zone_info = client[^\:]+\:\s+(?<zone_action>[^\s]+)\s+\'(?<zone>[^\/\s\']+)[^\s]+\s+(?<result>[^\s]+)
EXTRACT-named_record_request = IN\s(?<record_request>[^\s]+)\s
EXTRACT-named_query = query\:\s(?<query>[^\s]+)

